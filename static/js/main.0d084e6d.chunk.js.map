{"version":3,"sources":["components/Dropdown.js","components/Plot.js","components/LoadingSpinner.js","api/binance.js","App.js","index.js"],"names":["Dropdown","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Plot","_ref","historicalPrices","selectedCrypto","isSpread","data","labels","map","price","date","datasets","label","concat","perpetual","quarterly","borderColor","backgroundColor","biquarterly","options","responsive","plugins","legend","position","title","display","text","tooltip","callbacks","context","dataset","value","raw","Number","toFixed","_jsx","className","children","Line","LoadingSpinner","BINANCE_API_URL","getQuarterlyAndBiquarterlyNames","async","symbols","axios","get","find","symbol","startsWith","crypto","contractType","error","console","App","setSelectedCrypto","useState","futurePrices","setFuturePrices","setHistoricalPrices","selectedDays","setSelectedDays","selectedFrequency","setSelectedFrequency","isLoading","setIsLoading","setIsSpread","lastRefreshed","setLastRefreshed","fetchPrices","prices","perpetualResponse","perpetualPrice","markPrice","quarterlyResponse","quarterlyPrice","biquarterlyResponse","fetchFutureContractPrices","Date","toLocaleString","computeSpread","perpetualQuarterly","percentage","perpetualBiquarterly","quarterlyBiquarterly","fetchAndSetHistoricalPrices","days","frequency","endTime","now","startTime","interval","perpetualPrices","quarterlyPrices","biquarterlyPrices","Array","from","Set","sort","a","b","biquarterlyPrice","fetchHistoricalPrices","useEffect","formatPrice","formatChange","current","previous","_jsxs","Container","style","justifyContent","alignItems","Typography","variant","IconButton","color","onClick","RefreshIcon","FormControl","InputLabel","Select","onChange","event","target","MenuItem","Grid","container","spacing","direction","item","xs","md","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","Button","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d084e6d.chunk.js","sourcesContent":["import React from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\n\nconst Dropdown = ({ options, selectedValue, onChange, label }) => {\n  return (\n    <FormControl className=\"dropdown\">\n      <InputLabel>{label}</InputLabel>\n      <Select value={selectedValue} onChange={onChange}>\n        {options.map((option) => (\n          <MenuItem key={option} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst Plot = ({ historicalPrices, selectedCrypto, isSpread }) => {\n  const data = {\n    labels: historicalPrices.map((price) => price.date),\n    datasets: isSpread\n      ? [\n          {\n            label: `${selectedCrypto} Perpetual - Quarterly Spread %`,\n            data: historicalPrices.map((price) =>\n              price.perpetual && price.quarterly\n                ? ((price.perpetual - price.quarterly) / price.perpetual) * 100\n                : null\n            ),\n            borderColor: 'rgba(75, 192, 192, 1)',\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          },\n          {\n            label: `${selectedCrypto} Perpetual - Biquarterly Spread %`,\n            data: historicalPrices.map((price) =>\n              price.perpetual && price.biquarterly\n                ? ((price.perpetual - price.biquarterly) / price.perpetual) * 100\n                : null\n            ),\n            borderColor: 'rgba(255, 99, 132, 1)',\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          },\n          {\n            label: `${selectedCrypto} Quarterly - Biquarterly Spread %`,\n            data: historicalPrices.map((price) =>\n              price.quarterly && price.biquarterly\n                ? ((price.quarterly - price.biquarterly) / price.quarterly) * 100\n                : null\n            ),\n            borderColor: 'rgba(54, 162, 235, 1)',\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          },\n        ]\n      : [\n          {\n            label: `${selectedCrypto} Perpetual Prices`,\n            data: historicalPrices.map((price) => price.perpetual),\n            borderColor: 'rgba(75, 192, 192, 1)',\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          },\n          {\n            label: `${selectedCrypto} Quarterly Prices`,\n            data: historicalPrices.map((price) => price.quarterly),\n            borderColor: 'rgba(255, 99, 132, 1)',\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          },\n          {\n            label: `${selectedCrypto} Biquarterly Prices`,\n            data: historicalPrices.map((price) => price.biquarterly),\n            borderColor: 'rgba(54, 162, 235, 1)',\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          },\n        ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: `${selectedCrypto} ${isSpread ? 'Spread %' : 'Prices'} Over Time`,\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.raw !== null ? Number(context.raw).toFixed(2) : ''; // P67e8\n            const date = context.label || '';\n            return `${label}: ${value} (Date: ${date})`;\n          },\n        },\n      },\n    },\n  };\n\n  return <div className=\"chart-container\"><Line data={data} options={options} /></div>;\n};\n\nexport default Plot;\n","import React from 'react';\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"spinner-container\">\n      <div className=\"loading-spinner\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import axios from 'axios';\n\nconst BINANCE_API_URL = 'https://fapi.binance.com/fapi/v1';\n\nconst getQuarterlyAndBiquarterlyNames = async (crypto) => {\n  try {\n    const response = await axios.get(`${BINANCE_API_URL}/exchangeInfo`);\n    const symbols = response.data.symbols;\n    const quarterly = symbols.find(\n      (symbol) => symbol.symbol.startsWith(crypto) && symbol.contractType === 'CURRENT_QUARTER'\n    );\n    const biquarterly = symbols.find(\n      (symbol) => symbol.symbol.startsWith(crypto) && symbol.contractType === 'NEXT_QUARTER'\n    );\n    return {\n      quarterly: quarterly ? quarterly.symbol : null,\n      biquarterly: biquarterly ? biquarterly.symbol : null,\n    };\n  } catch (error) {\n    console.error('Error fetching quarterly and biquarterly names:', error);\n    return { quarterly: null, biquarterly: null };\n  }\n};\n\nexport const fetchFutureContractPrices = async (crypto) => {\n  try {\n    const { quarterly, biquarterly } = await getQuarterlyAndBiquarterlyNames(crypto);\n\n    const perpetualResponse = await axios.get(`${BINANCE_API_URL}/premiumIndex?symbol=${crypto}USDT`);\n    const perpetualPrice = Number(perpetualResponse.data.markPrice);\n\n    const quarterlyResponse = quarterly\n      ? await axios.get(`${BINANCE_API_URL}/premiumIndex?symbol=${quarterly}`)\n      : { data: { markPrice: '0' } };\n    const quarterlyPrice = Number(quarterlyResponse.data.markPrice);\n\n    const biquarterlyResponse = biquarterly\n      ? await axios.get(`${BINANCE_API_URL}/premiumIndex?symbol=${biquarterly}`)\n      : { data: { markPrice: '0' } };\n    const biquarterlyPrice = Number(biquarterlyResponse.data.markPrice);\n\n    return {\n      perpetual: perpetualPrice,\n      quarterly: quarterlyPrice,\n      biquarterly: biquarterlyPrice,\n    };\n  } catch (error) {\n    console.error('Error fetching future contract prices:', error);\n    return { perpetual: 0, quarterly: 0, biquarterly: 0 };\n  }\n};\n\nexport const fetchHistoricalPrices = async (crypto, days, frequency) => {\n  try {\n    const endTime = Date.now();\n    const startTime = endTime - days * 24 * 60 * 60 * 1000;\n\n    const interval = frequency || '1d';\n\n    const perpetualResponse = await axios.get(\n      `${BINANCE_API_URL}/klines?symbol=${crypto}USDT&interval=${interval}&startTime=${startTime}&endTime=${endTime}`\n    );\n    const perpetualPrices = perpetualResponse.data.map((price) => ({\n      date: new Date(price[0]).toLocaleString(),\n      perpetual: price[4],\n    }));\n\n    const { quarterly, biquarterly } = await getQuarterlyAndBiquarterlyNames(crypto);\n\n    const quarterlyResponse = quarterly\n      ? await axios.get(\n          `${BINANCE_API_URL}/klines?symbol=${quarterly}&interval=${interval}&startTime=${startTime}&endTime=${endTime}`\n        )\n      : { data: [] };\n    const quarterlyPrices = quarterlyResponse.data.map((price) => ({\n      date: new Date(price[0]).toLocaleString(),\n      quarterly: price[4],\n    }));\n\n    const biquarterlyResponse = biquarterly\n      ? await axios.get(\n          `${BINANCE_API_URL}/klines?symbol=${biquarterly}&interval=${interval}&startTime=${startTime}&endTime=${endTime}`\n        )\n      : { data: [] };\n    const biquarterlyPrices = biquarterlyResponse.data.map((price) => ({\n      date: new Date(price[0]).toLocaleString(),\n      biquarterly: price[4],\n    }));\n\n    const allDates = Array.from(new Set([\n      ...perpetualPrices.map((price) => price.date),\n      ...quarterlyPrices.map((price) => price.date),\n      ...biquarterlyPrices.map((price) => price.date),\n    ])).sort((a, b) => new Date(a) - new Date(b));\n\n    const combinedPrices = allDates.map((date) => {\n      const perpetualPrice = perpetualPrices.find((price) => price.date === date);\n      const quarterlyPrice = quarterlyPrices.find((price) => price.date === date);\n      const biquarterlyPrice = biquarterlyPrices.find((price) => price.date === date);\n\n      return {\n        date,\n        perpetual: perpetualPrice ? perpetualPrice.perpetual : null,\n        quarterly: quarterlyPrice ? quarterlyPrice.quarterly : null,\n        biquarterly: biquarterlyPrice ? biquarterlyPrice.biquarterly : null,\n      };\n    });\n\n    return combinedPrices;\n  } catch (error) {\n    console.error('Error fetching historical prices:', error);\n    return [];\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport Dropdown from './components/Dropdown';\nimport Plot from './components/Plot';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { fetchFutureContractPrices, fetchHistoricalPrices } from './api/binance';\nimport { Button, Container, Typography, MenuItem, Select, FormControl, InputLabel, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Grid } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst App = () => {\n  const [selectedCrypto, setSelectedCrypto] = useState('BTC');\n  const [futurePrices, setFuturePrices] = useState({ perpetual: 0, quarterly: 0, biquarterly: 0 });\n  const [historicalPrices, setHistoricalPrices] = useState([]);\n  const [selectedDays, setSelectedDays] = useState(7);\n  const [selectedFrequency, setSelectedFrequency] = useState('1d');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSpread, setIsSpread] = useState(false);\n  const [lastRefreshed, setLastRefreshed] = useState(null);\n\n  const handleCryptoChange = (event) => {\n    setSelectedCrypto(event.target.value);\n  };\n\n  const handleDaysChange = (event) => {\n    setSelectedDays(event.target.value);\n    fetchAndSetHistoricalPrices(event.target.value, selectedFrequency);\n  };\n\n  const handleFrequencyChange = (event) => {\n    setSelectedFrequency(event.target.value);\n    fetchAndSetHistoricalPrices(selectedDays, event.target.value);\n  };\n\n  const fetchPrices = async () => {\n    setIsLoading(true);\n    const prices = await fetchFutureContractPrices(selectedCrypto);\n    setFuturePrices(prices);\n    setLastRefreshed(new Date().toLocaleString());\n    setIsLoading(false);\n  };\n\n  const computeSpread = (prices) => {\n    const { perpetual, quarterly, biquarterly } = prices;\n    return {\n      perpetualQuarterly: {\n        value: perpetual - quarterly,\n        percentage: ((perpetual - quarterly) / perpetual) * 100,\n      },\n      perpetualBiquarterly: {\n        value: perpetual - biquarterly,\n        percentage: ((perpetual - biquarterly) / perpetual) * 100,\n      },\n      quarterlyBiquarterly: {\n        value: quarterly - biquarterly,\n        percentage: ((quarterly - biquarterly) / quarterly) * 100,\n      },\n    };\n  };\n\n  const fetchAndSetHistoricalPrices = async (days, frequency) => {\n    setIsLoading(true);\n    const prices = await fetchHistoricalPrices(selectedCrypto, days, frequency);\n    setHistoricalPrices(prices);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchPrices();\n    fetchAndSetHistoricalPrices(selectedDays, selectedFrequency);\n  }, [selectedCrypto, selectedDays, selectedFrequency]);\n\n  const formatPrice = (price) => {\n    return `$${Number(price).toFixed(2)}`;\n  };\n\n  const formatChange = (current, previous) => {\n    const change = ((current - previous) / previous) * 100;\n    return change.toFixed(2);\n  };\n\n  return (\n    <Container className=\"main-container\">\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h4\" className=\"heading\">Binance Futures Price Comparison</Typography>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <IconButton color=\"primary\" onClick={() => { fetchPrices(); fetchAndSetHistoricalPrices(selectedDays, selectedFrequency); }}>\n            <RefreshIcon />\n          </IconButton>\n          {lastRefreshed && <Typography variant=\"body2\" className=\"last-refreshed\">Last refreshed: {lastRefreshed}</Typography>}\n        </div>\n      </div>\n      <FormControl className=\"dropdown\">\n        <InputLabel>Cryptocurrency</InputLabel>\n        <Select value={selectedCrypto} onChange={handleCryptoChange}>\n          <MenuItem value=\"BTC\">BTC</MenuItem>\n          <MenuItem value=\"ETH\">ETH</MenuItem>\n        </Select>\n      </FormControl>\n      <Grid container spacing={3} direction=\"row\">\n        <Grid item xs={12} md={6}>\n          <div className=\"table-container\">\n            <Typography variant=\"h5\" className=\"heading\">Future Contract Prices</Typography>\n            <TableContainer component={Paper}>\n              <Table className=\"table\">\n                <TableHead className=\"table-header\">\n                  <TableRow className=\"table-row\">\n                    <TableCell className=\"table-cell\">Contract Type</TableCell>\n                    <TableCell className=\"table-cell\">Price</TableCell>\n                    <TableCell className=\"table-cell\">Change (%)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow className=\"table-row\">\n                    <TableCell className=\"table-cell\">Perpetual</TableCell>\n                    <TableCell className=\"table-cell\">{formatPrice(futurePrices.perpetual)}</TableCell>\n                    <TableCell className=\"table-cell\">-</TableCell>\n                  </TableRow>\n                  <TableRow className=\"table-row\">\n                    <TableCell className=\"table-cell\">Quarterly</TableCell>\n                    <TableCell className=\"table-cell\">{formatPrice(futurePrices.quarterly)}</TableCell>\n                    <TableCell className=\"table-cell\">{formatChange(futurePrices.quarterly, futurePrices.perpetual)}%</TableCell>\n                  </TableRow>\n                  <TableRow className=\"table-row\">\n                    <TableCell className=\"table-cell\">Biquarterly</TableCell>\n                    <TableCell className=\"table-cell\">{formatPrice(futurePrices.biquarterly)}</TableCell>\n                    <TableCell className=\"table-cell\">{formatChange(futurePrices.biquarterly, futurePrices.perpetual)}%</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <div className=\"table-container\">\n            <Typography variant=\"h5\" className=\"heading\">Spread</Typography>\n            <TableContainer component={Paper}>\n              <Table className=\"table\">\n                <TableHead className=\"table-header\">\n                  <TableRow className=\"table-row\">\n                    <TableCell className=\"table-cell\">Spread Type</TableCell>\n                    <TableCell className=\"table-cell\">Value</TableCell>\n                    <TableCell className=\"table-cell\">Percentage (%)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow className=\"table-row\">\n                    <TableCell className=\"table-cell\">Perpetual - Quarterly</TableCell>\n                    <TableCell className=\"table-cell\">{formatPrice(computeSpread(futurePrices).perpetualQuarterly.value)}</TableCell>\n                    <TableCell className=\"table-cell\">{computeSpread(futurePrices).perpetualQuarterly.percentage.toFixed(2)}%</TableCell>\n                  </TableRow>\n                  <TableRow className=\"table-row\">\n                    <TableCell className=\"table-cell\">Perpetual - Biquarterly</TableCell>\n                    <TableCell className=\"table-cell\">{formatPrice(computeSpread(futurePrices).perpetualBiquarterly.value)}</TableCell>\n                    <TableCell className=\"table-cell\">{computeSpread(futurePrices).perpetualBiquarterly.percentage.toFixed(2)}%</TableCell>\n                  </TableRow>\n                  <TableRow className=\"table-row\">\n                    <TableCell className=\"table-cell\">Quarterly - Biquarterly</TableCell>\n                    <TableCell className=\"table-cell\">{formatPrice(computeSpread(futurePrices).quarterlyBiquarterly.value)}</TableCell>\n                    <TableCell className=\"table-cell\">{computeSpread(futurePrices).quarterlyBiquarterly.percentage.toFixed(2)}%</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        </Grid>\n      </Grid>\n      <FormControl className=\"dropdown\">\n        <InputLabel>Days</InputLabel>\n        <Select value={selectedDays} onChange={handleDaysChange}>\n          <MenuItem value={7}>7</MenuItem>\n          <MenuItem value={14}>14</MenuItem>\n          <MenuItem value={30}>30</MenuItem>\n          <MenuItem value={90}>90</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className=\"dropdown\">\n        <InputLabel>Frequency</InputLabel>\n        <Select value={selectedFrequency} onChange={handleFrequencyChange}>\n          <MenuItem value=\"1h\">1h</MenuItem>\n          <MenuItem value=\"6h\">6h</MenuItem>\n          <MenuItem value=\"1d\">1d</MenuItem>\n        </Select>\n      </FormControl>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setIsSpread(!isSpread)}>\n        {isSpread ? 'Show Prices' : 'Show Spread %'}\n      </Button>\n      {isLoading ? <LoadingSpinner /> : <Plot historicalPrices={historicalPrices} selectedCrypto={selectedCrypto} isSpread={isSpread} />}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}